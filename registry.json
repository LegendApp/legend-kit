{
  "updatedAt": "2025-03-04T02:39:03.972Z",
  "packages": [
    {
      "name": "isWindowFocused$",
      "version": "1.0.0",
      "type": "observable",
      "platform": "web",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "An observable that is true if the window is focused",
      "dir": "web",
      "file": "isWindowFocused$.ts",
      "sha": "2d34649a1fe9ecff54c599d865d0e871ca773855b1e4e9ee33c7e37514e20e85"
    },
    {
      "name": "useElementScroll",
      "version": "1.0.0",
      "type": "hook",
      "platform": "web",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "A hook that creates an observable with the scroll value of an element",
      "dir": "web",
      "file": "useElementScroll.ts",
      "sha": "424c6558dfcf57acfd63c4b017cb13568619ad034b5c22e1f267420520cac724"
    },
    {
      "name": "useElementIsScrolled",
      "version": "1.0.0",
      "type": "hook",
      "platform": "web",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "A hook that creates an observable that is true if an element is scrolled",
      "dir": "web",
      "file": "useElementIsScrolled.ts",
      "sha": "c581d6c61177f56eae814bf1c824b66fb940bfa8f3ab2ff5efbc02487633c17b"
    },
    {
      "name": "stringAsRecord",
      "version": "1.0.0",
      "type": "linked",
      "platform": "all",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "JSON parse a string as a record",
      "dir": "as",
      "file": "stringAsRecord.ts",
      "sha": "42eaa60e8e35a97cfeadd2ade75d154711897e9445902fc230d35e5fe685c86b"
    },
    {
      "name": "stringAsArray",
      "version": "1.0.0",
      "type": "linked",
      "platform": "all",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "JSON parse a string as an array",
      "dir": "as",
      "file": "stringAsArray.ts",
      "sha": "c1faa82d9787f7a25b8283d3c806763456df90f253476c89d4d74801a72221e7"
    },
    {
      "name": "numberAsString",
      "version": "1.0.0",
      "type": "linked",
      "platform": "all",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "Convert a number to a string",
      "dir": "as",
      "file": "numberAsString.ts",
      "sha": "dadacc396adaf9216937905aa545dc2fbe3031331cb07ecbb67331ede1964b48"
    },
    {
      "name": "stringAsSet",
      "version": "1.0.0",
      "type": "linked",
      "platform": "all",
      "dependencies": [],
      "imports": [],
      "pro": false,
      "description": "JSON parse a string as a set",
      "dir": "as",
      "file": "stringAsSet.ts",
      "sha": "bf509e5e6087c8bcd610c42c89e32218d095192b21350651f98de6fa591ade16"
    },
    {
      "name": "createDraft",
      "version": "1.0.0",
      "type": "utility",
      "platform": "all",
      "dependencies": [],
      "imports": [],
      "pro": true,
      "description": "Create a draft state that can be committed or discarded",
      "dir": "utilities",
      "file": "createDraft.ts",
      "sha": "a37b0ec061acd75907e315911231c01ab447cc5a7acfaa57eed6fd616cf4272d"
    },
    {
      "name": "keysPressed$",
      "version": "1.0.0",
      "type": "observable",
      "platform": "web",
      "dependencies": [],
      "imports": [],
      "pro": true,
      "description": "An observable containing all currently pressed keys",
      "dir": "utilities",
      "file": "keysPressed$.ts",
      "sha": "0cdfa3fd54038877fa17bdf39a213a605f2fc4a9504b5ab23d175e933dd9a277"
    },
    {
      "name": "onHotkeys",
      "version": "1.0.0",
      "type": "utility",
      "platform": "web",
      "dependencies": [],
      "imports": [
        "keysPressed$"
      ],
      "pro": true,
      "description": "Listen for hotkeys",
      "dir": "utilities",
      "file": "onHotkeys.ts",
      "sha": "8f231326b771d5c3938f6ad38adccb3adae9048ebc190970ddf594d1d98a1092"
    },
    {
      "name": "useDraft",
      "version": "1.0.0",
      "type": "hook",
      "platform": "all",
      "dependencies": [],
      "imports": [
        "utilities/createDraft"
      ],
      "pro": true,
      "description": "A hook that creates a draft state that can be committed or discarded",
      "dir": "hooks",
      "file": "useDraft.ts",
      "sha": "32d21b660dc314efae8edb1241fe684bc7f65effbf1f2427ff5e0f4734b0c953"
    },
    {
      "name": "useOnHotkeys",
      "version": "1.0.0",
      "type": "hook",
      "platform": "web",
      "dependencies": [],
      "imports": [
        "utilities/onHotkeys"
      ],
      "pro": true,
      "description": "A hook that creates an observable with the scroll value of an element",
      "dir": "hooks",
      "file": "useOnHotkeys.ts",
      "sha": "a3ce6711933b6ad7d04b471a2198b9b4a8af37a0adfc92433517e168ca2a890e"
    }
  ]
}